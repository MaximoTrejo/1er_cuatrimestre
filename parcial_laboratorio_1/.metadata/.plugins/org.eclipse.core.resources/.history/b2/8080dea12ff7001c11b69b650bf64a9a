/*
 * computer.c
 *
 *  Created on: 28 jun. 2022
 *      Author: maxim
 */



#include <stdio.h>
#include <stdlib.h>
#include "utn.h"
#include "parser.h"
#include "Linkedlist.h"
#include "computer.h"

#include "menu.h"



void Passenger_delete(eComputer*this){
	free(this);
}

eComputer* Passenger_new(){
	eComputer *pasajero;
	/*
	 * La función malloc() devuelve un puntero al tipo de datos void (sin tipo). Dicho puntero
	 * puede ser asignado a una variable puntero de cualquier tipo mediante una conversión forzada
	 * de tipo de datos (casting).
	 */

	//crea un solo pasajero en MEMORIA
	pasajero=(eComputer*)malloc(sizeof(eComputer));

	return pasajero;
}


eComputer* Passenger_newParametros(char* idStr,char* descripcionStr,char* precioStr,char* idTipoStr ){

	eComputer *pasajeros= Passenger_new();
	//valido que no haya basura
	if(pasajeros != NULL){
		//llamo funcion para que me guarde el dato en la estructura
		Passenger_setId(pasajeros, atoi(idStr));//cambio id(char) a ententero
		Passenger_setNombre(pasajeros, descripcionStr);
		Passenger_setPrecio(pasajeros, atof(precioStr));
		Passenger_setCodigoVuelo(pasajeros, idTipoStr);
	}
	return pasajeros;
}

int Passenger_setId(eComputer* this,int id){
	int retorno=-1;
	//valido que no haya basura
	if(this != NULL){
		//guarda el valor id en la variable id de la estructura
		this->id=id;
		retorno=0;
	}
	return retorno;
}

int Passenger_setNombre(eComputer* this,char* descripcion){
	int retorno=-1;
	if(this!=NULL && descripcion != NULL){
		//estoy copiando en la estructura el dato del puntero que viene de parametro
		strcpy(this->descripcion,descripcion);
		retorno=0;
	}
	return retorno;
}



int Passenger_setPrecio(eComputer* this,float precio){
	int retorno=-1;
	//valido que no haya basura
	if(this != NULL){
		//guarda el valor id en la variable id de la estructura
		this->precio=precio;
		retorno=0;
	}
	return retorno;
}



int Passenger_setCodigoVuelo(eComputer* this,char* idTipo){
	int retorno=-1;
		if(this!=NULL && idTipo != NULL){
			//estoy copiando en la estructura el dato del puntero que viene de parametro
			strcpy(this->idTipo,idTipo);
			retorno=0;
		}
		return retorno;
}
